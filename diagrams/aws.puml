@startuml
'=======================
' Estilo para retângulo com traço
'=======================
skinparam rectangle<<agrupamento_tracejado>> {
  StereotypeFontSize 0
  BorderColor black
  BorderStyle dashed
  BackgroundColor #FFFFFF
  FontColor black
}

'========================
' SEÇÃO 1 - Includes
'========================
' utils
!include <aws/common>

' Armazenamento
!include <aws/Storage/AmazonS3/AmazonS3>
!include <aws/Storage/AmazonS3/bucket/bucket>
!include <aws/Database/AmazonDynamoDB/AmazonDynamoDB>

' Computação
!include <aws/Compute/AWSLambda/AWSLambda>

' Integração
!include <aws/ApplicationServices/AmazonAPIGateway/AmazonAPIGateway>

'========================
' SEÇÃO 2 - Definição de participantes
'========================
actor "Usuário" as User

rectangle "Terminal (curl)" as Curl
rectangle "Aplicação Web" as WebApp
rectangle "App Mobile" as MobileApp

rectangle "AWS Backend" <<agrupamento_tracejado>> {
  AMAZONS3(s3,"Bucket XPTO")
  AMAZONAPIGATEWAY(apiGateway, "API XPTO")
  AMAZONDYNAMODB(dynamoDB, "Tabela XPTO")
  AWSLAMBDA(lambda, "Função XPTO")
}

'========================
' SEÇÃO 3 - Relacionamentos
'========================
User --> Curl
User --> WebApp
User --> MobileApp

Curl --> apiGateway : Requisição REST
WebApp --> apiGateway : API call
MobileApp --> apiGateway : API call

apiGateway -> lambda : Invoca função Lambda
lambda --> dynamoDB : CRUD
lambda --> s3 : Salva dados para analytics

'========================
' SEÇÃO 4 - Notas
'========================
note right of lambda
  A Lambda pode:
  - Validar entrada
  - Gravar no S3
  - Atualizar estado no Dynamo
end note

@enduml
